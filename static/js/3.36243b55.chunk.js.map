{"version":3,"sources":["store/actions/orders.js","components/Order/Order.jsx","views/Orders.jsx"],"names":["ordersAction","token","dispatch","type","actionTypes","queryParams","localStorage","getItem","axios","get","then","result","data","catch","err","error","props","ingredients","Object","keys","order","map","ing","id","key","price","withErrorHandler","useDispatch","orders","useSelector","state","onGetOrders","useCallback","useEffect","style","padding","Order","Spinner"],"mappings":"oKAeaA,EACC,SAAAC,GAAK,OAAI,SAAAC,GACnBA,EATK,CAAEC,KAAMC,MAUb,IAAMC,EAAc,SAAWJ,EAAQ,8BAAgCK,aAAaC,QAAQ,UAAY,IACxGC,IACGC,IAAI,eAAiBJ,GACrBK,MAAK,SAAAC,GAlBM,IAAAC,EAmBVV,GAnBUU,EAmBSD,EAAOC,KAlBzB,CAAET,KAAMC,IAAwBQ,aAoBlCC,OAAM,SAAAC,GAAG,OAAIZ,GAbEa,EAaqBD,EAZlC,CAAEX,KAAMC,IAA6BW,MAAOA,KAD/B,IAAAA,O,QCTP,WAAAC,GACb,IAAMC,EAAcC,OAAOC,KAAKH,EAAMI,MAAMH,aAAaI,KAAI,SAAAC,GAAG,MAAI,CAClEA,EACAN,EAAMI,MAAMH,YAAYK,OAG1B,OACE,yBAAKC,GAAG,SACN,0CAEGN,EAAYI,KAAI,SAAAC,GAAG,OAClB,0BAAME,IAAKF,EAAI,GAAKN,EAAMO,IACvBD,EAAI,GADP,KACaA,EAAI,GADjB,SAKJ,qCACS,yCAAgBN,EAAMI,MAAMK,U,QCR5BC,uBAAiB,WAC9B,IAAMxB,EAAWyB,cAEXC,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,OAAOA,UAG3CG,EAAcC,uBAAY,SAAA/B,GAAK,OAAIC,EAASF,EAAuBC,MAAS,CAAEC,IAUpF,OAPA+B,qBACE,WACEF,EAAYzB,aAAaC,QAAQ,YAEnC,CAAEwB,IAIF,yBAAKG,MAAO,CAAEC,QAAS,SACpBP,EAASA,EAAOP,KAAI,SAAAD,GAAK,OAAI,kBAACgB,EAAD,CAAOZ,IAAKJ,EAAMG,GAAIH,MAAOA,OAAa,kBAACiB,EAAA,EAAD,SAG3E7B","file":"static/js/3.36243b55.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios';\r\n\r\nconst getOrders = data => {\r\n  return { type: actionTypes.GET_ORDERS, data };\r\n};\r\n\r\nconst getOrdersStart = () => {\r\n  return { type: actionTypes.GET_ORDERS_START };\r\n};\r\n\r\nconst getOrdersFail = error => {\r\n  return { type: actionTypes.GET_ORDERS_FAIL, error: error };\r\n};\r\n\r\nexport const ordersAction = {\r\n  getOrders : token => dispatch => {\r\n    dispatch(getOrdersStart());\r\n    const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + localStorage.getItem('userId') + '\"';\r\n    axios\r\n      .get('/orders.json' + queryParams)\r\n      .then(result => {\r\n        dispatch(getOrders(result.data));\r\n      })\r\n      .catch(err => dispatch(getOrdersFail(err)));\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nexport default props => {\r\n  const ingredients = Object.keys(props.order.ingredients).map(ing => [\r\n    ing,\r\n    props.order.ingredients[ing]\r\n  ]);\r\n\r\n  return (\r\n    <div id='Order'>\r\n      <p>\r\n        Ingredients:\r\n        {ingredients.map(ing => (\r\n          <span key={ing[0] + props.id}>\r\n            {ing[0]} ({ing[1]})\r\n          </span>\r\n        ))}\r\n      </p>\r\n      <p>\r\n        Price: <strong>&#8369;{props.order.price}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","// Libraries\r\nimport React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ordersAction } from '../store/actions/orders';\r\nimport axios from '../axios';\r\n\r\n// Components\r\nimport Spinner from '../components/UI/Spinner';\r\nimport Order from '../components/Order/Order';\r\nimport withErrorHandler from '../hoc/withErrorHandler';\r\n\r\nexport default withErrorHandler(() => {\r\n  const dispatch = useDispatch();\r\n  // Selectors\r\n  const orders = useSelector(state => state.orders.orders);\r\n\r\n  // Dispatch\r\n  const onGetOrders = useCallback(token => dispatch(ordersAction.getOrders(token)), [ dispatch ]);\r\n\r\n  // Effects\r\n  useEffect(\r\n    () => {\r\n      onGetOrders(localStorage.getItem('token'));\r\n    },\r\n    [ onGetOrders ]\r\n  );\r\n\r\n  return (\r\n    <div style={{ padding: '10px' }}>\r\n      {orders ? orders.map(order => <Order key={order.id} order={order} />) : <Spinner />}\r\n    </div>\r\n  );\r\n}, axios);\r\n"],"sourceRoot":""}