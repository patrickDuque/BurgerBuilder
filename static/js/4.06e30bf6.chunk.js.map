{"version":3,"sources":["views/SignUp.jsx"],"names":["withErrorHandler","props","dispatch","useDispatch","useState","email","setEmail","password","setPassword","message","error","loading","useSelector","state","auth","userError","form","onSubmit","e","user","preventDefault","authActions","onChange","target","value","type","name","label","rules","id","to","axios"],"mappings":"oNAeeA,uBAAiB,SAAAC,GAC9B,IAAMC,EAAWC,cADsB,EAIXC,mBAAS,IAJE,mBAI/BC,EAJ+B,KAIxBC,EAJwB,OAKLF,mBAAS,IALJ,mBAK/BG,EAL+B,KAKrBC,EALqB,OAMrBJ,mBAAS,CAAEK,QAAS,aAA9BC,EAN+B,oBAOjCC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,WAC1CI,EAAYH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKJ,SAW9CM,EAAO,kBAAC,IAAD,MAwBX,OAvBKL,IACHK,EACE,0BAAMC,SARY,SAAAC,GAHL,IAAAC,EAIfD,EAAEE,iBAJaD,EAKN,CAAEd,QAAOE,YALKL,EAASmB,IAAmBF,MAY/C,kBAAC,IAAD,CACEG,SAAU,SAAAJ,GAAC,OAAIZ,EAASY,EAAEK,OAAOC,QACjCA,MAAOnB,EACPoB,KAAK,QACLC,KAAK,QACLC,MAAM,QACNC,MAAOlB,IAET,kBAAC,IAAD,CACEY,SAAU,SAAAJ,GAAC,OAAIV,EAAYU,EAAEK,OAAOC,QACpCA,MAAOjB,EACPkB,KAAK,WACLC,KAAK,WACLC,MAAM,WACNC,MAAOlB,IAET,kBAAC,IAAD,CAAce,KAAK,WAAnB,aAKJ,yBAAKI,GAAG,UACLb,EACAD,GAAwB,KACzB,uDAC2B,kBAAC,IAAD,CAAMe,GAAG,WAAT,UAD3B,aAKHC","file":"static/js/4.06e30bf6.chunk.js","sourcesContent":["// Libraries\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from '../axios';\r\n\r\n// Store\r\nimport * as authActions from '../store/actions/auth';\r\n\r\n// Components\r\nimport CustomInput from '../components/UI/CustomInput';\r\nimport CustomButton from '../components/UI/CustomButton';\r\nimport withErrorHandler from '../hoc/withErrorHandler';\r\nimport Spinner from '../components/UI/Spinner';\r\n\r\nexport default withErrorHandler(props => {\r\n  const dispatch = useDispatch();\r\n\r\n  // State\r\n  const [ email, setEmail ] = useState('');\r\n  const [ password, setPassword ] = useState('');\r\n  const [ error ] = useState({ message: 'Required' });\r\n  const loading = useSelector(state => state.auth.loading);\r\n  const userError = useSelector(state => state.auth.error);\r\n\r\n  // Dispatch\r\n  const onSignUp = user => dispatch(authActions.signUp(user));\r\n\r\n  // Handlers\r\n  const onSubmitLogIn = e => {\r\n    e.preventDefault();\r\n    onSignUp({ email, password });\r\n  };\r\n\r\n  let form = <Spinner />;\r\n  if (!loading) {\r\n    form = (\r\n      <form onSubmit={onSubmitLogIn}>\r\n        <CustomInput\r\n          onChange={e => setEmail(e.target.value)}\r\n          value={email}\r\n          type='email'\r\n          name='email'\r\n          label='Email'\r\n          rules={error}\r\n        />\r\n        <CustomInput\r\n          onChange={e => setPassword(e.target.value)}\r\n          value={password}\r\n          type='password'\r\n          name='password'\r\n          label='Password'\r\n          rules={error}\r\n        />\r\n        <CustomButton type='Success'>SIGN UP</CustomButton>\r\n      </form>\r\n    );\r\n  }\r\n  return (\r\n    <div id='SignIn'>\r\n      {form}\r\n      {userError ? userError : null}\r\n      <p>\r\n        Already have an account? <Link to='/signin'>Log In</Link> here!\r\n      </p>\r\n    </div>\r\n  );\r\n}, axios);\r\n"],"sourceRoot":""}